#include<stdio.h>
#include <time.h>

int main(){

int totalPrice = 0;
int year, month, day;
int again, next;

// 파크입장권
const int ADULT_DAY = 59000, TEEN_DAY = 52000, CHILD_DAY = 46000, BABY_DAY = 15000, FREE = 0;
const int ADULT_AFTER = 47000, TEEN_AFTER = 41000, CHILD_AFTER = 35000, BABY_AFTER = 15000;
	
// 종합입장권 
const int ADULT_DAY_TOTAL = 62000, TEEN_DAY_TOTAL = 54000, CHILD_DAY_TOTAL = 47000, BABY_DAY_TOTAL = 15000;
const int ADULT_AFTER_TOTAL = 50000, TEEN_AFTER_TOTAL = 43000, CHILD_AFTER_TOTAL = 36000, BABY_AFTER_TOTAL = 15000;
	
int todayYMD = 0, ticketSelect = 0, idNumber = 0, backIdNumber = 0, orderCount = 0, discount = 0, age = 0, generation = 0, price = 0, countPrice = 0, discountPrice = 0; 

	struct tm *today;
	time_t timer;
	time(&timer);
	today = localtime(&timer); 
	timer = time(NULL); 
	year = (today -> tm_year - 100) * 10000;
	month = (today -> tm_mon + 1) * 100;
	day = today -> tm_mday;
	todayYMD = year + month + day;
	
do{
	
	do{  
		printf("권종을 선택하세요.(After4는 오후 4시부터 입장)\n");
		printf("\n1. 파크이용권 [1DAY]\n2. 파크이용권 [After4]\n3. 종합이용권 [1DAY]\n4. 종합이용권 [After4]\n");
		scanf("%d", &ticketSelect);
		
		if(!(ticketSelect == 1 || ticketSelect == 2 || ticketSelect == 3 || ticketSelect == 4 )){
			printf("\n 잘못입력하셨습니다. 다시 입력해주세요.\n\n");
			}
			
	}while (!(ticketSelect == 1 || ticketSelect == 2 || ticketSelect == 3 || ticketSelect == 4 ));
	
	do{ 
		printf("\n주민번호 앞 6글자를 입력하세요\n");
		scanf("%d", &idNumber);
		
		if(!((idNumber >= 000101) && (idNumber <= 991231))){
			printf("\n 잘못입력하셨습니다. 다시 입력해주세요.\n\n");
			}
			
	}while (!((idNumber >= 000101) && (idNumber <= 991231)));
	
	do{ 
		printf("\n주민번호 뒤 1글자를 입력하세요\n");
		scanf("%d", &backIdNumber);
		if(!(backIdNumber == 1 || backIdNumber == 2 || backIdNumber == 3 || backIdNumber == 4 )){
			printf("\n 잘못입력하셨습니다. 다시 입력해주세요.\n\n");
			}
			
	}while(!(backIdNumber == 1 || backIdNumber == 2 || backIdNumber == 3 || backIdNumber == 4 ));
	
	do{
		printf("\n몇개를 주문하시겠습니까? (최대 10개)\n");
		scanf("%d", &orderCount);
		if(orderCount > 10){
				printf("\n 잘못입력하셨습니다. 다시 입력해주세요.\n\n");
			}
			
	}while(orderCount > 10);
	
	do{
		printf("\n우대사항을 선택하세요.\n1. 없음(나이 우대는 자동처리)\n2. 장애인\n3. 국가유공자\n4. 휴가장병\n5. 임산부\n6. 다둥이\n");
		scanf("%d", &discount);
		if(!(discount == 1 || discount == 2 || discount == 3 || discount == 4 || discount == 5 || discount == 6)){
			printf("\n 잘못입력하셨습니다. 다시 입력해주세요.\n\n");
		}
		
	}while (!(discount == 1 || discount == 2 || discount == 3 || discount == 4 || discount == 5 || discount == 6));
	
	age = (todayYMD - (idNumber)) / 10000;	
	if((backIdNumber == 1) || (backIdNumber == 2)){
		age = age + 100;
	}
	
	if(age < 1){						
		generation = 1;									 
	}	 
	else if((age >= 1) && (age < 3)){	
		generation = 2;	
	}
	else if((age >= 3) && (age < 13)){	
		generation = 3;
	}
	else if((age >= 13) && (age < 18)){	
		generation = 4;
	}
	else if((age >= 19) && (age < 65)){	
		generation = 5;
	}
	else if(age >= 65){						
		generation = 6;
	}
	
	switch(ticketSelect){
		case 1 : 
			if(generation == 1){
				price = FREE;
			} 
			else if(generation == 2){
				price = BABY_DAY;
				}
			else if(generation == 3){
				price = CHILD_DAY;
				}
			else if(generation == 4){
				price = TEEN_DAY;
				}
			else if(generation == 5){
				price = ADULT_DAY;
				}
			else if(generation == 6){
				price = CHILD_DAY;
				} 
			break;
			
		case 2 :
			if(generation == 1){
				price = FREE;
			} 
			else if(generation == 2){
				price = BABY_AFTER;
				}
			else if(generation == 3){
				price = CHILD_AFTER;
				}
			else if(generation == 4){
				price = TEEN_AFTER;
				}
			else if(generation == 5){
				price = ADULT_AFTER;
				}
			else if(generation == 6){
				price = CHILD_AFTER;
				} 
			break;
			
		case 3 :
			if(generation == 1){
				price = FREE;
				} 
			else if(generation == 2){
				price = BABY_DAY_TOTAL;
				}
			else if(generation == 3){
				price = CHILD_DAY_TOTAL;
				}
			else if(generation == 4){
				price = TEEN_DAY_TOTAL;
				}
			else if(generation == 5){
				price = ADULT_DAY_TOTAL;
				}
			else if(generation == 6){
				price = CHILD_DAY_TOTAL;
				}
			break;
			
		case 4 :
			if(generation == 1){
				price = FREE;
				} 
			else if(generation == 2){
				price = BABY_AFTER_TOTAL;
				}
			else if(generation == 3){
				price = CHILD_AFTER_TOTAL;
				}
			else if(generation == 4){
				price = TEEN_AFTER_TOTAL;
				}
			else if(generation == 5){
				price = ADULT_AFTER_TOTAL;
				}
			else if(generation == 6){
				price = CHILD_AFTER_TOTAL;
				}
			break;
	}
	
	if(orderCount <= 10){
		countPrice = price * orderCount;
	}
	
	
	switch(discount){
		case 1 :									
			discountPrice = countPrice;
			break;
		
		case 2 :							
			discountPrice = countPrice;
			if((ticketSelect == 1) || (ticketSelect == 2) || (ticketSelect == 3) || (ticketSelect == 4)){
				discountPrice = countPrice * 0.5;		
			}
			break;					
		
		case 3 :										
			discountPrice = countPrice;
			if((ticketSelect == 1) || (ticketSelect == 2) || (ticketSelect == 3) || (ticketSelect == 4)){
				discountPrice = countPrice * 0.5;		
			}
			break;
			
		case 4 :									
			discountPrice = countPrice;
			if((ticketSelect == 3) || (ticketSelect == 4)){
				discountPrice = countPrice * 0.5;		
			}
			break;
		
		case 5 :									
			discountPrice = countPrice;
			if((ticketSelect == 3) || (ticketSelect == 4)){
				discountPrice = countPrice * 0.5;
			}
			break;
			
		case 6 :										
			discountPrice = countPrice;
			if((ticketSelect == 3) || (ticketSelect == 4)){
				discountPrice = countPrice * 0.7;
			}
			break;		
		}
	
	printf("\n ***** 가격은 %d원입니다. *****\n", discountPrice);
		
		printf("\n 계속 발권 하시겠습니까? \n 1. 티켓 발권\n 2. 종료\n\n");
		scanf("%d", &again);
		
}while(again == 1);
		
		printf("\n감사합니다.\n"); 
	
	return 0;
}
